{{- define "mylibchart.deployment.tpl" -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "deploy.fullname" . }}
  labels:
    {{- include "deploy.commonLabels" . | nindent 4 }}
  annotations:
    reloader.stakater.com/auto: "true"
spec:
  revisionHistoryLimit: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 2        # how many pods we can add at a time
      maxUnavailable: 0  # maxUnavailable define how many pods can be unavailable during the rolling update
  selector:
    matchLabels:
      {{- include "deploy.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        co.elastic.logs/enabled: "true"
      labels:
        {{- include "deploy.selectorLabels" . | nindent 8 }}
    spec:
      serviceAccountName: {{ .Values.serviceAccountName | quote}}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.name }}:{{ .Values.image.tag}}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          ports:
            - containerPort: {{ .Values.service.targetPort }}
          livenessProbe:
            exec:
              command: ["/bin/grpc_health_probe", "-addr=:9090"]
            initialDelaySeconds: 10
          readinessProbe:
            exec:
              command: ["/bin/grpc_health_probe", "-addr=:9090"]
            initialDelaySeconds: 5
            timeoutSeconds: 1
          envFrom:
            - configMapRef:
                name: {{ .Values.environmentConfigName | quote}}

{{- end -}}
{{- define "mylibchart.deployment" -}}
{{- include "mylibchart.util.merge" (append . "mylibchart.deployment.tpl") -}}
{{- end -}}